name: Generate Databases

on:
  push:
    branches: ["*"]
    tags: ["v*.*"]
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  run-generate-database:
    strategy:
      fail-fast: false
      matrix:
        species: [misc, H_textbook, H, Li, Na, K, Rb, Cs, Sr88_singlet, Sr88_triplet]
        include:
          - extra_args: "--warnings-as-exceptions"
          - species: Cs
            extra_args: "--warnings-as-exceptions --known-exceptions 1" # (Cs, n=5, l=2, j=1.5) is not converging very well
          - species: Sr88_singlet  # no warnings as exceptions, due to bad convergence
            extra_args: "--n-min 11"  # states with n <= 11 are converging very bad
          - species: Sr88_triplet  # no warnings as exceptions, due to bad convergence
            extra_args: "--n-min 11"  # states with n <= 11 are converging very bad
    name: ${{ matrix.species }}
    runs-on: ubuntu-latest
    timeout-minutes: 300
    steps:
    - uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v6
    - name: Run generate_database.py
      run: uv run generate_database ${{ matrix.species }} --directory database --n-max 220 ${{ matrix.extra_args }}
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: database-${{ matrix.species }}
        path: |
          database/*/*.parquet
          database/*/*.log

  github-release:
    name: Release database files to github releases
    if: startsWith(github.ref, 'refs/tags/')  # only release to github on tag pushes
    needs: [run-generate-database]
    runs-on: ubuntu-latest
    timeout-minutes: 15

    permissions:
      contents: write

    steps:
    - name: Download all the database files
      uses: actions/download-artifact@v4
      with:
        path: database
        pattern: database-*
        merge-multiple: true

    - name: Zip database folders
      working-directory: database/
      run: |
        VERSION_TAG=${GITHUB_REF#refs/tags/}
        for dir in */; do
          if [[ "$dir" != *"$VERSION_TAG/" ]]; then
            echo "Error: Version mismatch between folder $dir and version tag $VERSION_TAG"
            exit 1
          fi
          zip -r "${dir%/}.zip" "$dir"
        done

    - name: Release zipped database folders
      uses: softprops/action-gh-release@v2
      with:
        files: database/*.zip
        draft: true
